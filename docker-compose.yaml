#
# rtl_433 / telegraph 
# Capture 433/915 Mhz sensor data and forward to influxdb.
#
# Mon Aug 02 17:44:51 PDT 2021 
# Stuart Lynne
# vim: tabstop=4 shiftwidth=4 expandtab
# 
# This docker-compose will create a multi-container Docker application with:
#
#   rtl_433 - capture sensor data from 433 Mhz and 915 Mhz, forward to telegraf
#   telegraf - forward data to influxdb, fails gracefully with buffering.
#
# This is intended for deployment in a limited environment system, e.g. Pi Zero W
# that only captures and forwards data. We forward via telegraf to handle network
# or influxdb server outages gracefully.
#
version: '3.6'

services:

    # Run rtl_433 looking at specific frequencies for specific protocols. Forward
    # received data to influx://telegraf:8086/write?db=sensors.
    #
    # images
    # 2021-08-06
    # There are two extant problems:
    #    1. alpine 3.13 and newer, Assertion failed: clock_gettime(1, tp) == 0 (libusbi.h: usbi_get_monotonic_time: 497)
    #    2. rtl_433, does not exit on async read failure, fixed 2021-01 approx
    rtl_433:
        container_name: rtl_433
        #image: hertzg/rtl_433:alpine-3.12-latest
        #image: hertzg/rtl_433:alpine-3.13-latest
        #image: hertzg/rtl_433:alpine-latest
        #image: dwinks/rtl_433_docker - fails armv7
        #image: lettore/rtl_433 - fails armv7
        #image: kpine/rtl433
        #image: bademux/rtl_433tomqtt
        image: local/rtl_433
        environment:
           # timezone
           TIMEZONE: "America/Vancouver"
           TZ: "America/Vancouver"
        #restart: unless-stopped
        restart: always
        devices:
          - /dev/bus/usb:/dev/bus/usb
        command:
          # -H 120 -f 433.92M -f 915M -F json -F influx://telegraf:8086/write?db=sensors -M time:usec -M level -M stats:1 -M protocol -R 12 -R 40 -R 41 -R 112
          # set hop time and frequencies
          - '-H'
          - '120'
          - '-f'
          - '433.92M'
          - '-f' 
          - '915M'
          # outputs, stdout json, and influx
          - '-F'
          - 'json'
          - '-F'
          - 'influx://telegraf:8086/write?db=sensors'
          # meta settings, time to micro-second, include rssi, periodic stats for seen protocols
          - '-M'
          - 'time:usec'
          - '-M'
          - 'level'
          - '-M'
          - 'stats:1'
          #- '-M' 
          #- 'protocol'
          # enable protocols: 12 Oregon, 20 Ambient TFA, 40 - Accurite 5n1, 41 - Accurite 986, 112 - Ambient TX-8300
          - '-R'
          - '12'
          - '-R'
          - '20'
          - '-R'
          - '40'
          - '-R'
          - '41'
          - '-R'
          - '112'
        # wait until telegraf has started
        depends_on:
          - telegraf

    telegraf:
        container_name: telegraf
        hostname: telegraf
        #image: telegraf
        image: mik9/telegraf:armv6
        volumes:
            - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
        environment:
            # timezone
            TZ: "America/Vancouver"
            #
            # These are passed to telegraf to set the url for outpus.influxdb and the database to use. 
            # See telegraf/telegraf.conf 
            #
            # [[outputs.influxdb]]
            #      urls = ["${INFLUXURL}"]

            # For testing
            # INFLUXURL: 'http://192.168.40.16:8086'

            # For production
            INFLUXURL: 'http://influx4.wimsey.co:8086'

            # Database to use with influxdb
            # INFLUXDB: 'whiskey'
            INFLUXDB: 'sensors'

            #INFLUXURL: ${INFLUXURL}
            #INFLUXDB: ${INFLUXDB}
            DEBGUON: "false"
            
        command:
            - '--config'
            - '/etc/telegraf/telegraf.conf'
        #dns:
        #    - ${LOCALHOSTDNS}

